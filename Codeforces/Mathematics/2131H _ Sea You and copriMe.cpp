#include<bits/stdc++.h>
using namespace std; 
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#define ll long long
#define dbl long double
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
#define FILE "ellencute"
 
const ll INF=902337203695775807, N=2e6+69, MOD=1e9+7;    
 
void ffopen(){
    if(fopen(FILE".inp", "r")){
        freopen(FILE".inp", "r", stdin);
        freopen(FILE".out", "w", stdout);
    }else if(fopen("ellencute.inp", "r")){
        freopen("ellencute.inp", "r", stdin);
        freopen("ellencute.out", "w", stdout);
    }
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
ll __lcm(ll a, ll b, const ll lim=LLONG_MAX){
    if(a == -1 || b == -1)return -1;
    ll g = __gcd(a,b);
    if(b/g > lim/a)return -1;
    return (a/g)*b;
}

int n, m, spf[N];
vect<int> D[N];

void FIMI(const vect<int>& a, vect<int>& l, vect<int>& r){
    
}

void sol(){
    cin >> n >> m;
    
    
    int a[n], l[n], r[n];
    for(int& i : a)cin >> i;
    
    auto LL = [&](){
        int cnt[m+1], z=0;
        memset(cnt, 0, sizeof cnt);
        
        for(int i=0;n>i;i++){
            int x = a[i];
            if(x == 0){
                l[i] = 0;
                z++;
                continue;
            }
            vect<int> v;
            if(D[x].empty()){
                while(x>1){
                    v.eb(spf[x]);
                    while(x%v.back() == 0) x /= v.back();
                } 
                D[a[i]] = v;
            }else v = D[x];
            
            
            
            int sz = v.size(), fumo = 0;
            for(int mask=1;1<<sz >mask;mask++){
                int pr = 1;
                for(int j=0;sz>j;j++) if(mask & (1<<j)) pr *= v[j];
                
                
                fumo += popcnt(mask)&1 ? cnt[pr] : -cnt[pr];
                cnt[pr]++;
                
            }
            
            // fumo : so so co it nhat 1 thua so chung voi a[i]
            l[i] = i-z-fumo;
        }       
        
    };
    
    auto RR = [&](){
        int cnt[m+1], z=0;
        memset(cnt, 0, sizeof cnt);
        for(int i=n-1;i>=0;i--){
            int x = a[i];
            if(x == 0){
                z++;
                r[i] = 0;
                continue;
            }
            
            vect<int> v;
            if(D[x].empty()){
                while(x>1){
                    v.eb(spf[x]);
                    while(x%v.back() == 0) x /= v.back();
                } 
                D[a[i]] = v;
            }else v = D[x];
            
            int sz = v.size(), fumo = 0;
            for(int mask=1;1<<sz >mask;mask++){
                int pr = 1;
                for(int j=0;sz>j;j++) if(mask & (1<<j)) pr *= v[j];
                
                fumo += popcnt(mask)&1 ? cnt[pr] : -cnt[pr];
                cnt[pr]++;
                
            }
            
            r[i] = n-i-1-fumo-z;
        }
    };
    
    LL();
    RR();
    
    int mn = -1, num = 0, min_num = 1e9;
    for(int i=0;n>i;++i) if(l[i]>0){
        mn = i;break;
    }
    
    
    vect<int> ans;
    
    for(int i=n-1;i>=0 && mn>-1;i--){ // co the chon 2 so ko giao
        if(r[i] > 0 && i>mn){
            for(int j=0;mn>j;j++) if(__gcd(a[j], a[mn]) == 1){
                ans.eb(j+1);
                ans.eb(mn+1);
                break;
            }
            for(int j=n-1;j>i;j--) if(__gcd(a[j], a[i]) == 1){
                ans.eb(j+1);
                ans.eb(i+1);
                for(int e : ans)cout << (e<1 ? -71 : e) << ' ';
                return;
            }
        }
        
        if(l[i] + r[i]) min_num = min(min_num, l[i] + r[i]);
    }
    
    
    for(int i=0;n>i;i++){
        if(l[i] + r[i] == min_num){
            for(int j=0;n>j;j++) if(__gcd(a[i], a[j]) == 1 && i != j){
                ans.eb(i+1);
                ans.eb(j+1);
                a[i] = a[j] = 0;
                break;
            }
            
            LL();
            
            // if(n==200000 && a[0] == 867678){
                // cout << "wtf";return;
            // }
            
            for(int j=n-1;j>=0;j--){
                if(i!=j && l[j] > 0){
                    for(int k=0;j>k;k++){
                        if(a[k] && a[j] && __gcd(a[k], a[j]) == 1){
                            ans.eb(k+1);
                            ans.eb(j+1);
                            for(int e : ans)cout << (e<1 ? -69 : e) << ' ';
                            nextl;
                            return;
                        }
                    }
                }
            }
            
            break;
        }
    }
    
    cout << "0\n";
    
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ffopen();
    
    iota(spf, spf+N, 0);
    for(int i=2;N>i*i;i++){
        if(spf[i] != i)continue;
        for(int j = i*i;N>j;j+=i) spf[j] = min(spf[j], i);
    }
    
    int t=1;
    cin >> t;
    while(t--)sol();
}
/*
                                                     ...-%%%%%%%%%%%...                               
                                             .:**#%=%%%%%+........-%%%%. .                            
                                        .%%%%%%=-..%#.               .#%%.                            
                                      %%%+..      .:                    *%%.                          
                                    .%%.          :.                     :%%%%%:.                     
                                   .%%.     ...  .:                    ::     .=%%%.                  
                                 ..%%.    #%#:%. :                   :..          =%%.                
                                %%+..:  .%*::::%-::::::-::::::..   .:-%%%%.        .*%%..             
                              .%#     :.%:::::::%%%%%%%%%%%%%+...%%%+::::%#.         .%%.             
                             .%%.  ..:.%=::::*%#***#%::::::::%%%%=:::::::%%.          .%%.            
                             =%%%...-%%%:::*%********%:::%%%****%::::::::%%            .%-            
                            .%::::%%***%=:%%**********%%********%:::::::=%-:.          .%..           
                            #%:::%#*****%%**********************%:::+%%%*%%-.:      .::..%%.          
                           .%%::%%*****==**==*****#************#%%%%#******%%..::::..     .%%.        
                         .%%#%+%%***************##*+=+*==********************%%.:.         .%%        
                        .%%***%%****************#**==**==******==**+=+********%%%%%%%%%     %%.       
                      .#%#*********************%%**************++************%%::::::%*   .%%%.       
                     .%%***************#*****%%%****************************%%::::::%% .-%%%.         
                    .#%***************#****%%--%*********%*****************%#::::-%%%%%%%%%%.         
                    .%%**************#**%%%----%********%%**************#***#%%%#**%#******%*         
                   .%%**************#%%%--.....%%*******%%**************#**********#%******%%.        
                   .%%*************%%...........%%******%-%*************#***********%%*****%%.        
                   .%%*************%%...%%%%%.....%%%%%%%.=%%%%%%%%##****#****##::::+%%*****%#        
                   .%%************%%...%.   %%.................%%%%-.....%*****#*****%%*****%%        
                   .#%#*#****#****%%:::%-  %%.................%.   #-....%*****#*#####%#****%%.       
                    .%%##****%%%**%%:::::##...................%=  .%+:::%#*****#:####*%%****%%.       
                     .+%%#**%%.#%%%%::::::........###+.:*##-....%%%:::::%*****##******%%****%%-       
                       ..%%*%%.......:::.......##..#*...#+..#*....:::::%******#*****##%%*****%%.      
                        .%%%%%................#-##=--##+-+###-#....:::%******#:###*::%%#*****%%.      
                      .%%****%%..............#----------------=*...#%#****##**##::#**%%*******%%.     
                      .%%%%%*=+%%*...........#-----------------#.....#%%%%%%+:##*##:*%%*******%%%.    
                        ..:*%====%%%%........#-----------------#:.........%#********%%*****%%%%%%.    
                          .%%=======*%%%%%%%.%%+----#-%------%%#.......%%%%::::::::%%==***#%###%%.    
                         ..%%=============+%%-:#%%%%-::%%%%%%::%%%%%%%%%=%%*******%%=====**%%###%%..  
                        -%%%%%%%%%%%%%%%%+%.%+:+%::%::::%::%:::%%#%... .%%******%%%========#%####%%.  
                      .%%++#############%%# ..%%.**%%#%%%%%%%#%***%.  :%%*****%%%=+%%%%%%%%%%#####%%. 
                    .%%++++*############*++%   .%************#****%.  #%*%%%%+++%%%%###############%%.
         .+%%%%%%%%%%####+##########*+++++%%. .%**#**********#****%   %%**%%%++++###################%:
      =%%%%######################++++++++%%*%.-%%#***********#****% .%****%%+++++###################%%
   .%%%#######################*%%%%%%%%.%%*#%+%###################%.%%***%%%+++++###################%%
  *%%######################+#%%++++++%*. =%*%. .:%%%%########%%%%%%%%%#*#%.%%++#####################%%
.%%%#####################%%%%%+++++++%-  %*#%%.          .%%%*++++++*%%%....%%#####################%%*
%%######%%%%%#%%%%%######%%.%*+++++++%.  %****#.        .%%+++*+++++*++%%...=%%###################%%%.
%%%%%%%%#-=##%...%%######%%.%%+++++++%%..*%***#%%%%%. ..%+++++++++++++++%%...%%##################%%%. 
.%:.             .#%#####%%.%%+++++++++%. %*********%%%%%++++++++++++++++%%...%%##############%%%%..  
                  :%#####%% .%%+++++++%%  .%%**********%%++++++++++++++++%%.....%#########%%%%%% .    
                 *%#####%%.  .%%+++++++%%:. .%%********%%++++++++++++++++%%....%%%%%%%%%%%%*..        
                 .%%##%%%     .%%*+++++++%%. ..#%%%#****%%+++++++++++++++%%%%%% . .....               
                 %%#%%%.       .:%%%%%%%%%%%...-%. ......%%+++++++++++++%%.                           
               ..%%%.              ...     .%%%#%%%=:#%%%%%%%%*++++++%%%#                             
                                                 .-%%+.  ... .%%%%%%%:.  
*/