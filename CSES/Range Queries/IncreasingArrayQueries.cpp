#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#include<bits/stdc++.h>
#define dbl long double
#define int long long
using namespace std; 
 
const int INF=9023372036954775807, N=2e5+69, MOD=1e9+7;    
 
void ffopen(const string& file){
    if(file.empty())return;
    freopen((file + ".inp").c_str(), "r", stdin);
    freopen((file + ".out").c_str(), "w", stdout);
}
 
int pm(int a,const int b=1e9+7){
    return ((a%b)+b)%b;
}
 
int __lcm(int a,int b){
    return a*b/__gcd(a,b);
}
 
int n,q;
vect<int> a;
 
struct reimu{
    vect<int> pfs, v;
};
 
struct Seggs{
    vect<reimu> t;
    Seggs(){
        t.rs(4*n+1);
        build();
    }void build(int l=0, int r=n-1, int id=1){
        t[id].v.rs(r-l+1);
        t[id].pfs.rs(r-l+1);
        for(int ii=l;r>=ii;ii++){
            int i=ii-l;
            t[id].v[i]= i ? max(t[id].v[i-1], a[ii]) : a[ii];
            t[id].pfs[i]= i ? t[id].pfs[i-1]+t[id].v[i] : t[id].v[i];
        }if(l==r)return;
        int mid=(l+r)/2;
        build(l, mid, id*2);
        build(mid+1, r, id*2+1);
    }void get(int i, int j, vect<int>& ids, int l=0, int r=n-1, int id=1){
        if(l > j || r < i)return;
        if(l >= i && r <= j){
            ids.eb(id);return;
        }int mid=(l+r)/2;
        get(i, j, ids, l, mid, id*2);
        get(i, j, ids, mid+1, r, id*2+1);
    }int askreimu(int L, int R){
        vect<int> ids;
        get(L, R, ids);
        int ans=t[ids[0]].pfs.back(), nmax=t[ids[0]].v.back();
        for(int i=1;ids.size()>i;i++){
            int ix=ids[i], l=0, r=t[ix].v.size()-1, res=-1;
            while(l <= r){
                int mid=(l+r)/2;
                if(t[ix].v[mid] >= nmax)r=mid-1;
                else{
                    res=mid;
                    l=mid+1;
                }
            }if(res > -1)
                ans+=(res+1)*nmax - t[ix].pfs[res] + t[ix].pfs.back();
            else ans += t[ix].pfs.back();
            nmax=max(nmax, t[ix].v.back());
        }return ans;
    }
};
 
void sol(){
    cin >> n >> q;
    a.rs(n);
    vect<int> pfs(n);
    for(int i=0;n>i;i++){
        cin >> a[i];
        pfs[i]=a[i] + (i ? pfs[i-1] : 0);
    }
    Seggs sgt;
    while(q--){
        int l,r;
        cin >> l >> r;
        int x=pfs[r-1] - (l-2>=0 ? pfs[l-2] : 0);
        cout << sgt.askreimu(l-1, r-1) - x << el;
    }
}
 
signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ffopen("");
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*                                                                              .+*
                                                                          ###.####+
                                                                    =####%%#-#####*.
                                                               -##%%%%%%%%#:-#####*:..
  .:.=####:+                                              +*###%%%%%%%%%%#::#%%%###:::
  ...######:####*                                      *#####%%%%%%%%%%%%#:-##%%###:::.
  ...######::#######=                               ###%%############%%%%%%#::####*...
 .:.+#%####+###############*+=                   ##%%%%%%%%%%%%%##########%%#:.####...
 .::###*.-##%%%%%%%%%%%%%%%%%#####*           +#%%%%%%%%%%%%%%%%%%%%#######:.##%###:.:.
 ..-###:####%%%%%%%%%%%%%%%%%%%%%%%%###-     ##%%%%%%%%%%%%%%%%%%%%%%%%#%##::######...
 :.*##.*#######%%%%%%%%%%####%%##########*-*%%#%%%%%%###%%%%%%%%%%%%%%%%%%#%#*.####..:
 ::#####+::############%%%%%%%%%%%%%%%%%%%%##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::*####.::
...##%%#%#:#%%%#####%%%%%%%%%%%-+#%#:--%%%##=+=:-%%%%%#%%%%%%%%%%%%%%%%%%::##%%%##+:::
 ..-##%##:#%%%%%%%%%%%%%%+-=###%%%#######%#####+=+==-::#%%%%%%%%%%%%%%%%%#:+%%%%%#-...
 .:.##%#*:#%%%%%%%%%%*#%%#%%#%###########%#####*###**-=-##%%%%%%%%%%%%%%%%#-#%%%%#-:::
 . .#%%%##----+%%%%%#+#%%#%#%##############*########**##%:-=%%#+%%%%%%%##*=--%%%##:::
  ..-#%%%%%%%-#%%%%#%%%%################*#####**#########*=+#%%%# %%%%%=#%%%%%%%#=:::
   -:#%%%%%%#-#%#+###%#############*###################*#####-=*%#   %%#-%%%%%##*..:.
   -.=#%%%%%#-+%*#%##########################################*=#%%#+    +*%%%#%#::
   ..:#%%%##  -+###############################################@+-%%#       ##*:
    ::-      #+####################################%#####%#####*-*-%%#
            ###################*################%#%#%#############=#%%#-
           ::=##########################%######%%#%##%%#%%%#######*-+#%#=
           -=+##########################%%#########%#%%###%#######%=-#%%#*
          ##*%#*##################################%#%%#%%#########%+-+##%##
         ---+%###############################%####++*%%%%%%%#######=-:=*####
        .:=+#%#*############*+==#########%%#%#%%#==---=*#%%%%%%##### :--#%%##
       :.=*%%%############%%%#%#%%#######%%#%#%%#*###*####%###%#####  ==::#%##
      .:-=#%%%###########*+=--:--=+##%#%##%#%#%#=-----:--=*%##%#%##*   ==:%###*
      :-+#%%%%*########%*+=----:---=%##%%#%%#%%%=---::::--=*########    :-#%###
      -=#%%%%%*#######@@*+---------==%%%%%%%%#%+------:----=*%%#####     ---####
    :::*%%%%%#*######@@@#+------=---==+%%%%%%%%==--=------==*%%%#####   ----####+
   .:-%%%%%%%*######%@@%#+=%:.%######@+==#%%%%#+@-:-%####%+=#%%@@####-   .--:####
   :-###%%%%#%####%@@@@%*+=%#@%######%----==*%=-%@#%#####%=+*%%%@@%##%     ::+###-
      -=*####% +*#@@@@%%*+=@########%=----------+%#######%=+*%%%%#=#%#     :-:###
            #%  ==+%%%%%*+==%#######@------------%#####%%=+=%#**##-%%        :.
             #  %%%###%%++===%#####@=------------=%###%%====%%%%%#:#
                %%%@%%%%=+===--=#*-----:-----------=+==-===-%%%%%*
                *%%%#%%%=====--------------------------==-=%%%**#+
                +%% -+**=-====-----------###-----------==@@@#%#@#-
                #*  #%%#%%*-===----------------------=+@@@@%#%@@%*
                   #%@@%      -=-------------------:  %@+# -#@@%%#
                  #%%@@%#      -=+==---------==++=+++      #%%%%%%=
                 .%%%%%%#--=- ---===----=#-------===++-----%%%%##%#-:::.
            ..::::#%#####-----=-==-:::::::::::::-#+=%=--::-#######-:::.:
            ..:#::#######::::::=--=%%**#:..:-%%%%%%%=--::::######*#:::::
            :::#:::*#####--::::-=--=%%%-....=%%%%%%%#+-::::#####::%:::::
            :::::::::+##+----:::=*-*%%::::..-%%%%%%%%*=::::##+:::-+:::-:
            ..:#:::::::------:-++##%%:.::.:.:%%%%%%%%*--::::::::::::::-:
            ..:#:::::::---:::=+#%%%%+::.:::::+%%%%%%%%*---::::::=#:::--:
             ..#::::-----====+%%%%%%::.......-%%%%%%%%%%+--:::::#-:::-::
             .:::------=--==#%%%%%%%:::....:::%%%%%%%%%%%%+--::=+:::-::
              .:-=-----==+#%%%%%%%%%%%%%#=--=*%%%%%%%%%%%%%%+--::.:---:
             ..:=--#===+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::==--:
             :::##+=+##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:----
            .::+%%%+:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#=##.
            :::#%%%%#:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-#%%%%%#%%#=:
           .::::=##%%%%#--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%++#%#%%%##%%%%%#::
           :.::::.::*##%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%##########+::::
            :  :-::-::.:#%%%%#:#%%%%%%%%%%%%%%%%%%%%-#%%##+......::::::::::
                %%%*:--..:#%%%%%%*##%%%%%%#%%%##::%%%%#-::.....:::.::::::
              %%%%%%%%%-..:=%%%%%%##=+%=:=*#%#%#%%#+::-+-::%%%%-
             %%%%%%%%@%%::::-=#%%%%%%%%%%%%%%%##:::.::@%%%%%%%%%:
            #%%%%%%%%%%%@:::.....+#%%%%%###+:.::: ::+%%%%@%%%@%%%
            %%%%%%%%%%%%%    ....:...:..:.::::..    %%%%@%%%%%%%%=
             %%%%%%%%%%%=     ::...  :.:..  .       %%%%%%%%%%%%%#
              %%%%%%%%%=                            #%%%%%%%%%%%%=
                  +*                                 %%%%%%%%%%%#
                                                      +%%%%%%%%
               
*/