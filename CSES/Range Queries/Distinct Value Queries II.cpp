#include<bits/stdc++.h>
using namespace std; 
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#define ll long long
#define int long long
#define dbl long double
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
#define FILE "ellencute"

const ll INF=902337203695775807, N=2e5+69, MOD=1e9+7;    

void ffopen(){
    if(fopen(FILE".inp", "r")){
        freopen(FILE".inp", "r", stdin);
        freopen(FILE".out", "w", stdout);
    }
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
ll __lcm(ll a, ll b, const ll lim=LLONG_MAX){
    if(a == -1 || b == -1)return -1;
    ll g = __gcd(a,b);
    if(b/g > lim/a)return -1;
    return (a/g)*b;
}

int n, q;
vect<int> A, B;
// A[i] : position which element i points to
// B[i] : position which element i is pointed from

struct Seggs{
	int t[N*4];
	Seggs(){build();}
	void build(int l=1, int r=n, int id=1){
		if(l == r){
			t[id] = A[l];
			return;
		}
		int mid = (l+r)/2;
		build(l, mid, id*2);
		build(mid+1, r, id*2+1);
		t[id] = min(t[id*2], t[id*2+1]);
	}
	void upd(int p, int x, int l=1, int r=n, int id=1){
		if(l > p || r < p)return;
		if(l == r){
			t[id] = x;
			return;
		}
		int mid = (l+r)/2;
		upd(p, x, l, mid, id*2);
		upd(p, x, mid+1, r, id*2+1);
		t[id] = min(t[id*2], t[id*2+1]);
	}
	int get(int i, int j, int l=1, int r=n, int id=1){
		if(l > j || r < i)return 1e9;
		if(i <= l && r <= j)return t[id];
		int mid = (l+r)/2;
		return min(get(i, j, l, mid, id*2), get(i, j, mid+1, r, id*2+1));
	}
};


void sol(){
    cin >> n >> q;
	A.rs(n+5, n+1);
	B.rs(n+5, 0);
	int a[n+5];
	map<int, set<int>> fumo;
	for(int i=1;n>=i;i++){
		cin >> a[i];
		auto &memo = fumo[a[i]];
		if(memo.size())B[i] = *memo.rbegin();
		memo.insert(i);
	}
	for(int i=1;n>=i;i++){
		if(B[i] != 0){
			A[B[i]] = i;
		}
	}

	Seggs sgt;


	while(q--){
		int t;
		cin >> t;
		if(t==1){
			int i, x;
			cin >> i >> x;
			A[B[i]] = A[i];
			B[A[i]] = B[i];
			sgt.upd(B[i], A[i]);
			fumo[a[i]].erase(i);
			auto &memo = fumo[x];
			auto p = memo.upb(i);
			if(p == memo.end()){
				A[i] = n+1;
				sgt.upd(i, A[i]);
				if(memo.empty())B[i] = 0;
                else{
                    int last = *memo.rbegin();
                    B[i] = last;
                    A[last] = i;
                    sgt.upd(last, A[last]);
                }

			}else{
				int pos = *p;

                sgt.upd(i, pos);
                sgt.upd(B[pos], i);

				A[i] = pos;
				A[B[pos]] = i;
				
				B[i] = B[pos];
				B[pos] = i;
			}
            memo.insert(i);
            a[i] = x;
		}else{
			int l, r;
			cin >> l >> r;
			cout << (sgt.get(l,r) <= r ? "NO\n" : "YES\n");
		}
	}
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ffopen();
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*
                                                     ...-%%%%%%%%%%%...                               
                                             .:**#%=%%%%%+........-%%%%. .                            
                                        .%%%%%%=-..%#.               .#%%.                            
                                      %%%+..      .:                    *%%.                          
                                    .%%.          :.                     :%%%%%:.                     
                                   .%%.     ...  .:                    ::     .=%%%.                  
                                 ..%%.    #%#:%. :                   :..          =%%.                
                                %%+..:  .%*::::%-::::::-::::::..   .:-%%%%.        .*%%..             
                              .%#     :.%:::::::%%%%%%%%%%%%%+...%%%+::::%#.         .%%.             
                             .%%.  ..:.%=::::*%#***#%::::::::%%%%=:::::::%%.          .%%.            
                             =%%%...-%%%:::*%********%:::%%%****%::::::::%%            .%-            
                            .%::::%%***%=:%%**********%%********%:::::::=%-:.          .%..           
                            #%:::%#*****%%**********************%:::+%%%*%%-.:      .::..%%.          
                           .%%::%%*****==**==*****#************#%%%%#******%%..::::..     .%%.        
                         .%%#%+%%***************##*+=+*==********************%%.:.         .%%        
                        .%%***%%****************#**==**==******==**+=+********%%%%%%%%%     %%.       
                      .#%#*********************%%**************++************%%::::::%*   .%%%.       
                     .%%***************#*****%%%****************************%%::::::%% .-%%%.         
                    .#%***************#****%%--%*********%*****************%#::::-%%%%%%%%%%.         
                    .%%**************#**%%%----%********%%**************#***#%%%#**%#******%*         
                   .%%**************#%%%--.....%%*******%%**************#**********#%******%%.        
                   .%%*************%%...........%%******%-%*************#***********%%*****%%.        
                   .%%*************%%...%%%%%.....%%%%%%%.=%%%%%%%%##****#****##::::+%%*****%#        
                   .%%************%%...%.   %%.................%%%%-.....%*****#*****%%*****%%        
                   .#%#*#****#****%%:::%-  %%.................%.   #-....%*****#*#####%#****%%.       
                    .%%##****%%%**%%:::::##...................%=  .%+:::%#*****#:####*%%****%%.       
                     .+%%#**%%.#%%%%::::::........###+.:*##-....%%%:::::%*****##******%%****%%-       
                       ..%%*%%.......:::.......##..#*...#+..#*....:::::%******#*****##%%*****%%.      
                        .%%%%%................#-##=--##+-+###-#....:::%******#:###*::%%#*****%%.      
                      .%%****%%..............#----------------=*...#%#****##**##::#**%%*******%%.     
                      .%%%%%*=+%%*...........#-----------------#.....#%%%%%%+:##*##:*%%*******%%%.    
                        ..:*%====%%%%........#-----------------#:.........%#********%%*****%%%%%%.    
                          .%%=======*%%%%%%%.%%+----#-%------%%#.......%%%%::::::::%%==***#%###%%.    
                         ..%%=============+%%-:#%%%%-::%%%%%%::%%%%%%%%%=%%*******%%=====**%%###%%..  
                        -%%%%%%%%%%%%%%%%+%.%+:+%::%::::%::%:::%%#%... .%%******%%%========#%####%%.  
                      .%%++#############%%# ..%%.**%%#%%%%%%%#%***%.  :%%*****%%%=+%%%%%%%%%%#####%%. 
                    .%%++++*############*++%   .%************#****%.  #%*%%%%+++%%%%###############%%.
         .+%%%%%%%%%%####+##########*+++++%%. .%**#**********#****%   %%**%%%++++###################%:
      =%%%%######################++++++++%%*%.-%%#***********#****% .%****%%+++++###################%%
   .%%%#######################*%%%%%%%%.%%*#%+%###################%.%%***%%%+++++###################%%
  *%%######################+#%%++++++%*. =%*%. .:%%%%########%%%%%%%%%#*#%.%%++#####################%%
.%%%#####################%%%%%+++++++%-  %*#%%.          .%%%*++++++*%%%....%%#####################%%*
%%######%%%%%#%%%%%######%%.%*+++++++%.  %****#.        .%%+++*+++++*++%%...=%%###################%%%.
%%%%%%%%#-=##%...%%######%%.%%+++++++%%..*%***#%%%%%. ..%+++++++++++++++%%...%%##################%%%. 
.%:.             .#%#####%%.%%+++++++++%. %*********%%%%%++++++++++++++++%%...%%##############%%%%..  
                  :%#####%% .%%+++++++%%  .%%**********%%++++++++++++++++%%.....%#########%%%%%% .    
                 *%#####%%.  .%%+++++++%%:. .%%********%%++++++++++++++++%%....%%%%%%%%%%%%*..        
                 .%%##%%%     .%%*+++++++%%. ..#%%%#****%%+++++++++++++++%%%%%% . .....               
                 %%#%%%.       .:%%%%%%%%%%%...-%. ......%%+++++++++++++%%.                           
               ..%%%.              ...     .%%%#%%%=:#%%%%%%%%*++++++%%%#                             
                                                 .-%%+.  ... .%%%%%%%:.  
*/