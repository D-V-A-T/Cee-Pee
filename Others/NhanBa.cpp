#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#include<bits/stdc++.h>
#define dbl long double
#define int long long
#define N (int)1e5+69
using namespace std; 

const int INF=9023372036954775807, spMOD=6855006;
int MOD=1e9+7;    

int posmod(int a,int b){
    return ((a%b)+b)%b;
}

int __lcm(int a,int b){
    return a*b/__gcd(a,b);
}
/*
Với một số nguyên dương x, xét phép biến đổi x thành f(x) mô tả như sau:
Xét các chữ số trong biểu diễn thập phân của 𝑥 từ trái qua phải 
(từ hàng cao nhất xuống hàng đơn vị). Với mỗi 
chữ số d xét đến thì viết ra giá trị d * 3 trong hệ thập phân.
Sau khi duyệt hết biểu diễn thập phân của 𝑥, dãy chữ
số được viết ra tạo thành biểu diễn thập phân của giá trị f(x).
Yêu cầu: Cho số nguyên không âm k, xét dãy a[0], a[1], ..., a[n] xây dựng theo quy tắc:
    a[0] = 𝑘
    a[i]=f(a[i-1])
VD
3
1024 2     | 901836
68 3       | 96121836
1 100000   | 29561031
*/

int binpow(int a ,int b ,int c){
    int result = 1;
    a = a % c; 
    while (b > 0) {
        if (b % 2 != 0) {
            result = (result * a) % c;
        }
        a = (a * a) % c;
        b /= 2;
    }
    
    return result;
}

vect<vect<pii>> dp(10, vect<pii>(N));
// dp[i][j] : number i after applying the operation j times

void funky(int num, int times){
    // 

    if (times < 0) return;
    if(dp[num][times].fi != -1) return;
    
    string s=to_string(3*num);
    for(int i=s.size()-1;i>=0;i--){
        int c=s[i]-'0';
        if(dp[c][times-1].fi == -1)
            funky(c, times-1);
    }dp[num][times].fi=0;int pw=0;
    for(int i=s.size()-1;i>=0;i--){
        int c=s[i]-'0', b=dp[num][times].se;
        dp[num][times].fi+=binpow(10, b, MOD)*(dp[c][times-1].fi);
        dp[num][times].fi%=MOD;
        dp[num][times].se+=dp[c][times-1].se;
        dp[num][times].se%=spMOD;
        // 10 ^ 6855006 % 123456789 = 1
        // => 10 ^ n % MOD = 10 ^ (n % 6855006) % MOD
    }
}

void cirno() {
    // recursive funtion doesn't work due to stack over flow T-T
    // Try applying a small amount of operations on
    // small numbers to understand better =P
    for (int i=0;10>i;i++)
        dp[i][0]= {i, 1};
    for (int times=1;1e5>=times;times++) {
        for (int num=0;num<10;num++) {
            string s = to_string(3 * num);
            for (int i = s.size() - 1; i >= 0; i--) {
                int c=s[i]-'0', b=dp[num][times].se;
                dp[num][times].fi+=binpow(10, b, MOD)*(dp[c][times-1].fi);
                dp[num][times].fi%=MOD;
                dp[num][times].se+=dp[c][times-1].se;
                dp[num][times].se%=spMOD;
            }
        }
    }
}

int funky(string& k, int& n){
    // merge the result of all digits after applying the operation n times
    int b=0, ans=0;
    for(int i=k.size()-1;i>=0;i--){
        int c=k[i]-'0';
        ans=(ans + dp[c][n].fi * binpow(10,b,MOD)) % MOD;
        b+=dp[c][n].se;
    }return ans;
}

void sol(){
    MOD=123456789;
    cirno();
    int q;
    cin >> q;
    while(q--){
        string k; int n;
        cin >> k >> n;
        cout << funky(k, n) << el;
    }
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
//  freopen("","r",stdin);
//  freopen("","w",stdout);
    sol();
}
/*                                                                              .+*
                                                                          ###.####+
                                                                    =####%%#-#####*.
                                                               -##%%%%%%%%#:-#####*:..
  .:.=####:+                                              +*###%%%%%%%%%%#::#%%%###:::
  ...######:####*                                      *#####%%%%%%%%%%%%#:-##%%###:::.
  ...######::#######=                               ###%%############%%%%%%#::####*...
 .:.+#%####+###############*+=                   ##%%%%%%%%%%%%%##########%%#:.####...
 .::###*.-##%%%%%%%%%%%%%%%%%#####*           +#%%%%%%%%%%%%%%%%%%%%#######:.##%###:.:.
 ..-###:####%%%%%%%%%%%%%%%%%%%%%%%%###-     ##%%%%%%%%%%%%%%%%%%%%%%%%#%##::######...
 :.*##.*#######%%%%%%%%%%####%%##########*-*%%#%%%%%%###%%%%%%%%%%%%%%%%%%#%#*.####..:
 ::#####+::############%%%%%%%%%%%%%%%%%%%%##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::*####.::
...##%%#%#:#%%%#####%%%%%%%%%%%-+#%#:--%%%##=+=:-%%%%%#%%%%%%%%%%%%%%%%%%::##%%%##+:::
 ..-##%##:#%%%%%%%%%%%%%%+-=###%%%#######%#####+=+==-::#%%%%%%%%%%%%%%%%%#:+%%%%%#-...
 .:.##%#*:#%%%%%%%%%%*#%%#%%#%###########%#####*###**-=-##%%%%%%%%%%%%%%%%#-#%%%%#-:::
 . .#%%%##----+%%%%%#+#%%#%#%##############*########**##%:-=%%#+%%%%%%%##*=--%%%##:::
  ..-#%%%%%%%-#%%%%#%%%%################*#####**#########*=+#%%%# %%%%%=#%%%%%%%#=:::
   -:#%%%%%%#-#%#+###%#############*###################*#####-=*%#   %%#-%%%%%##*..:.
   -.=#%%%%%#-+%*#%##########################################*=#%%#+    +*%%%#%#::
   ..:#%%%##  -+###############################################@+-%%#       ##*:
    ::-      #+####################################%#####%#####*-*-%%#
            ###################*################%#%#%#############=#%%#-
           ::=##########################%######%%#%##%%#%%%#######*-+#%#=
           -=+##########################%%#########%#%%###%#######%=-#%%#*
          ##*%#*##################################%#%%#%%#########%+-+##%##
         ---+%###############################%####++*%%%%%%%#######=-:=*####
        .:=+#%#*############*+==#########%%#%#%%#==---=*#%%%%%%##### :--#%%##
       :.=*%%%############%%%#%#%%#######%%#%#%%#*###*####%###%#####  ==::#%##
      .:-=#%%%###########*+=--:--=+##%#%##%#%#%#=-----:--=*%##%#%##*   ==:%###*
      :-+#%%%%*########%*+=----:---=%##%%#%%#%%%=---::::--=*########    :-#%###
      -=#%%%%%*#######@@*+---------==%%%%%%%%#%+------:----=*%%#####     ---####
    :::*%%%%%#*######@@@#+------=---==+%%%%%%%%==--=------==*%%%#####   ----####+
   .:-%%%%%%%*######%@@%#+=%:.%######@+==#%%%%#+@-:-%####%+=#%%@@####-   .--:####
   :-###%%%%#%####%@@@@%*+=%#@%######%----==*%=-%@#%#####%=+*%%%@@%##%     ::+###-
      -=*####% +*#@@@@%%*+=@########%=----------+%#######%=+*%%%%#=#%#     :-:###
            #%  ==+%%%%%*+==%#######@------------%#####%%=+=%#**##-%%        :.
             #  %%%###%%++===%#####@=------------=%###%%====%%%%%#:#
                %%%@%%%%=+===--=#*-----:-----------=+==-===-%%%%%*
                *%%%#%%%=====--------------------------==-=%%%**#+
                +%% -+**=-====-----------###-----------==@@@#%#@#-
                #*  #%%#%%*-===----------------------=+@@@@%#%@@%*
                   #%@@%      -=-------------------:  %@+# -#@@%%#
                  #%%@@%#      -=+==---------==++=+++      #%%%%%%=
                 .%%%%%%#--=- ---===----=#-------===++-----%%%%##%#-:::.
            ..::::#%#####-----=-==-:::::::::::::-#+=%=--::-#######-:::.:
            ..:#::#######::::::=--=%%**#:..:-%%%%%%%=--::::######*#:::::
            :::#:::*#####--::::-=--=%%%-....=%%%%%%%#+-::::#####::%:::::
            :::::::::+##+----:::=*-*%%::::..-%%%%%%%%*=::::##+:::-+:::-:
            ..:#:::::::------:-++##%%:.::.:.:%%%%%%%%*--::::::::::::::-:
            ..:#:::::::---:::=+#%%%%+::.:::::+%%%%%%%%*---::::::=#:::--:
             ..#::::-----====+%%%%%%::.......-%%%%%%%%%%+--:::::#-:::-::
             .:::------=--==#%%%%%%%:::....:::%%%%%%%%%%%%+--::=+:::-::
              .:-=-----==+#%%%%%%%%%%%%%#=--=*%%%%%%%%%%%%%%+--::.:---:
             ..:=--#===+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::==--:
             :::##+=+##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:----
            .::+%%%+:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#=##.
            :::#%%%%#:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-#%%%%%#%%#=:
           .::::=##%%%%#--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%++#%#%%%##%%%%%#::
           :.::::.::*##%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%##########+::::
            :  :-::-::.:#%%%%#:#%%%%%%%%%%%%%%%%%%%%-#%%##+......::::::::::
                %%%*:--..:#%%%%%%*##%%%%%%#%%%##::%%%%#-::.....:::.::::::
              %%%%%%%%%-..:=%%%%%%##=+%=:=*#%#%#%%#+::-+-::%%%%-
             %%%%%%%%@%%::::-=#%%%%%%%%%%%%%%%##:::.::@%%%%%%%%%:
            #%%%%%%%%%%%@:::.....+#%%%%%###+:.::: ::+%%%%@%%%@%%%
            %%%%%%%%%%%%%    ....:...:..:.::::..    %%%%@%%%%%%%%=
             %%%%%%%%%%%=     ::...  :.:..  .       %%%%%%%%%%%%%#
              %%%%%%%%%=                            #%%%%%%%%%%%%=
                  +*                                 %%%%%%%%%%%#
                                                      +%%%%%%%%
               
*/
