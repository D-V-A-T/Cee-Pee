#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#include<bits/stdc++.h>
#define dbl long double
#define int long long
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
using namespace std; 

const int INF=902337203695775807, N=2e5+69, MOD=1e9+7;    

void ffopen(const string& file){
    if(file.empty())return;
    freopen((file + ".inp").c_str(), "r", stdin);
    freopen((file + ".out").c_str(), "w", stdout);
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
int __lcm(int a,int b){return a*b/__gcd(a,b);}

namespace cau1{
    void sol(){
        int s, p;
        cin >> s >> p;
        pii ans={-INF, -INF};
        for(int i=1;i*i<=p;i++){
            if(p%i == 0){
                int u=i, v=p/i;
                if(u + v == s){
                    ans={u, v};break;
                }if(-u - v == s){
                    ans = {-v, -u};break;
                }
            }
        }if(ans.fi != -INF)cout << ans.fi << el << ans.se;
        else cout << "NO SOLUTION";
    }
}

namespace cau2{
    void sol(){
        int n, m;
        cin >> n >> m;
        set<int> s;
        set<int, greater<int>> sr;
        for(int i=0;m>i;i++){
            int x;cin >> x;
            s.insert(x);
            sr.insert(x);
        }for(int i=1;n>=i;i++){
            auto it = sr.lwb(i), it2 = s.lwb(i);
            int ans=INF;
            if(it != s.end())ans = *it;
            if(it2 != sr.end() && abs(ans-i) > abs(*it2-i))ans=*it2;
            cout << ans << ' '; 
        }
    }
}



namespace cau3{
    void sol(){
        int n, ans=INF;
        cin >> n;
        int a[n];
        set<int> s;
        set<int, greater<int>> sr;
        for(int& i : a){
            cin >> i;
            sr.insert(i);
            s.insert(i);
        }for(int i=0;n>i;i++){
            for(int j=i+1;n>j;j++){
                if(i != j)ans=min(ans, abs(a[i]-a[j]));
                int x=a[i]+a[j];
                int u=INF, v=INF;
                auto it=s.lwb(x), it2=sr.lwb(x);
                if(it != s.end())u=*it;
                if(it2 != sr.end())v=*it2;
                ans=min({ans, abs(u-x), abs(v-x)});
            }
        }cout << ans;
    }
}

namespace cau5{
    int lg2(int i) {
        return i ? __builtin_clzll(1) - __builtin_clzll(i) : -1;
    }

    int get(int l, int r, vect<vect<int>>& spt){
        if(l > r)return 0;
        int i=lg2(r-l+1);
        return __gcd(spt[i][l], spt[i][r-(1<<i)+1]);
    }

    void sol(){
        int n, q;
        cin >> n >> q;
        vect<int> a(n), b(n), d(n);
        vect<vect<int>> spt(lg2(n)+1, vect<int>(n+1));
        for(int& i : a)cin >> i;
        for(int i=0;n>i;i++){
            cin >> b[i];
            d[i]=abs(a[i]-b[i]);
            spt[0][i]=d[i];
        }
        for(int i=1;lg2(n)>=i;i++) 
            for(int j=0;j+(1<<i) <= n;j++)
                spt[i][j]=__gcd(spt[i-1][j], spt[i-1][j+(1<<(i-1))]);
            
        while(q--){
            int x, y;
            cin >> x >> y;
            if(x > y)swap(x, y);
            x--;y--;
            int g=__gcd(get(0, x-1, spt), get(x+1, y-1, spt));
            cout << __gcd(g, get(y+1, n-1, spt)) << el;
        }
    }
}

int n,m,C,T;
vect<vect<int>> a, moves;
vect<vect<vect<int>>> ti(500, vect<int>(500, vect<int>(3, INF)));

struct okarun{
    int x;int y;int full_throttle;int t;
    bool operator < (const okarun& o) const{
        return t > o.t;
    }
};

bool safe(int x,int y){
    return 1<=x && x<=n && 1<=y && y<=m;
}

void sol(){
    cin >> n >> m;
    a.rs(n+1, vect<int>(m+1));
    for(int i=1;n>=i;i++){
        for(int j=1;m>=j;j++){
            cin >> a[i][j];
        }
    }cin >> C;
    moves.rs(C, vect<int>(3));
    for(auto& i : moves)cin >> i[0] >> i[1] >> i[2];
    cin >> T;
    if(a[1][1] > 2){
        cout << -1;return;
    }
    prq<okarun> pq;
    if(a[1][1]==0){
        ti[1][1][0]=ti[1][1][1]=ti[1][1][2]=0;
    }else if(a[1][1] == 1){
        ti[1][1][0]=ti[1][1][1]=0;
        ti[1][1][2]=T;
    }else if(a[1][1] == 2){
        ti[1][1][0]=0;
        ti[1][1][1]=T;
        ti[1][1][2]=T+T;
    }
    pq.push({1, 1, 2-a[1][1], 0});
    while(pq.size()){
        okarun ok=pq.top();
        pq.pop();
        int t=ok.t, x=ok.x, y=ok.y, ft=ok.full_throttle;
        //cout << x << ' ' << y << ' ' << ft << ' ' << t << ' ' << ti[x][y] << el; 
        if(ti[x][y][ft] < t)continue;
        for(auto& i : moves){
            int nt=t+i[2], nx=x+i[0], ny=y+i[1];
            if(!safe(nx, ny))continue;
            if(a[nx][ny] > 2)continue;
            int nft=max(a[nx][ny] - ft, 0ll);
            for(int )
            //cout << x <<  ' ' << y << ' ' << nx << ' ' << ny << ' ' << nt << el;
            if(nt < ti[nx][ny]){
                ti[nx][ny]=nt;
                pq.push({nx, ny, max(ft-a[nx][ny], 0ll), nt});
            }
        }
    }
    if(ti[n][m] == INF)cout << -1;
    else cout << ti[n][m];
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ffopen("");
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*                                                                              .+*
                                                                          ###.####+
                                                                    =####%%#-#####*.
                                                               -##%%%%%%%%#:-#####*:..
  .:.=####:+                                              +*###%%%%%%%%%%#::#%%%###:::
  ...######:####*                                      *#####%%%%%%%%%%%%#:-##%%###:::.
  ...######::#######=                               ###%%############%%%%%%#::####*...
 .:.+#%####+###############*+=                   ##%%%%%%%%%%%%%##########%%#:.####...
 .::###*.-##%%%%%%%%%%%%%%%%%#####*           +#%%%%%%%%%%%%%%%%%%%%#######:.##%###:.:.
 ..-###:####%%%%%%%%%%%%%%%%%%%%%%%%###-     ##%%%%%%%%%%%%%%%%%%%%%%%%#%##::######...
 :.*##.*#######%%%%%%%%%%####%%##########*-*%%#%%%%%%###%%%%%%%%%%%%%%%%%%#%#*.####..:
 ::#####+::############%%%%%%%%%%%%%%%%%%%%##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::*####.::
...##%%#%#:#%%%#####%%%%%%%%%%%-+#%#:--%%%##=+=:-%%%%%#%%%%%%%%%%%%%%%%%%::##%%%##+:::
 ..-##%##:#%%%%%%%%%%%%%%+-=###%%%#######%#####+=+==-::#%%%%%%%%%%%%%%%%%#:+%%%%%#-...
 .:.##%#*:#%%%%%%%%%%*#%%#%%#%###########%#####*###**-=-##%%%%%%%%%%%%%%%%#-#%%%%#-:::
 . .#%%%##----+%%%%%#+#%%#%#%##############*########**##%:-=%%#+%%%%%%%##*=--%%%##:::
  ..-#%%%%%%%-#%%%%#%%%%################*#####**#########*=+#%%%# %%%%%=#%%%%%%%#=:::
   -:#%%%%%%#-#%#+###%#############*###################*#####-=*%#   %%#-%%%%%##*..:.
   -.=#%%%%%#-+%*#%##########################################*=#%%#+    +*%%%#%#::
   ..:#%%%##  -+###############################################@+-%%#       ##*:
    ::-      #+####################################%#####%#####*-*-%%#
            ###################*################%#%#%#############=#%%#-
           ::=##########################%######%%#%##%%#%%%#######*-+#%#=
           -=+##########################%%#########%#%%###%#######%=-#%%#*
          ##*%#*##################################%#%%#%%#########%+-+##%##
         ---+%###############################%####++*%%%%%%%#######=-:=*####
        .:=+#%#*############*+==#########%%#%#%%#==---=*#%%%%%%##### :--#%%##
       :.=*%%%############%%%#%#%%#######%%#%#%%#*###*####%###%#####  ==::#%##
      .:-=#%%%###########*+=--:--=+##%#%##%#%#%#=-----:--=*%##%#%##*   ==:%###*
      :-+#%%%%*########%*+=----:---=%##%%#%%#%%%=---::::--=*########    :-#%###
      -=#%%%%%*#######@@*+---------==%%%%%%%%#%+------:----=*%%#####     ---####
    :::*%%%%%#*######@@@#+------=---==+%%%%%%%%==--=------==*%%%#####   ----####+
   .:-%%%%%%%*######%@@%#+=%:.%######@+==#%%%%#+@-:-%####%+=#%%@@####-   .--:####
   :-###%%%%#%####%@@@@%*+=%#@%######%----==*%=-%@#%#####%=+*%%%@@%##%     ::+###-
      -=*####% +*#@@@@%%*+=@########%=----------+%#######%=+*%%%%#=#%#     :-:###
            #%  ==+%%%%%*+==%#######@------------%#####%%=+=%#**##-%%        :.
             #  %%%###%%++===%#####@=------------=%###%%====%%%%%#:#
                %%%@%%%%=+===--=#*-----:-----------=+==-===-%%%%%*
                *%%%#%%%=====--------------------------==-=%%%**#+
                +%% -+**=-====-----------###-----------==@@@#%#@#-
                #*  #%%#%%*-===----------------------=+@@@@%#%@@%*
                   #%@@%      -=-------------------:  %@+# -#@@%%#
                  #%%@@%#      -=+==---------==++=+++      #%%%%%%=
                 .%%%%%%#--=- ---===----=#-------===++-----%%%%##%#-:::.
            ..::::#%#####-----=-==-:::::::::::::-#+=%=--::-#######-:::.:
            ..:#::#######::::::=--=%%**#:..:-%%%%%%%=--::::######*#:::::
            :::#:::*#####--::::-=--=%%%-....=%%%%%%%#+-::::#####::%:::::
            :::::::::+##+----:::=*-*%%::::..-%%%%%%%%*=::::##+:::-+:::-:
            ..:#:::::::------:-++##%%:.::.:.:%%%%%%%%*--::::::::::::::-:
            ..:#:::::::---:::=+#%%%%+::.:::::+%%%%%%%%*---::::::=#:::--:
             ..#::::-----====+%%%%%%::.......-%%%%%%%%%%+--:::::#-:::-::
             .:::------=--==#%%%%%%%:::....:::%%%%%%%%%%%%+--::=+:::-::
              .:-=-----==+#%%%%%%%%%%%%%#=--=*%%%%%%%%%%%%%%+--::.:---:
             ..:=--#===+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::==--:
             :::##+=+##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:----
            .::+%%%+:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#=##.
            :::#%%%%#:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-#%%%%%#%%#=:
           .::::=##%%%%#--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%++#%#%%%##%%%%%#::
           :.::::.::*##%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%##########+::::
            :  :-::-::.:#%%%%#:#%%%%%%%%%%%%%%%%%%%%-#%%##+......::::::::::
                %%%*:--..:#%%%%%%*##%%%%%%#%%%##::%%%%#-::.....:::.::::::
              %%%%%%%%%-..:=%%%%%%##=+%=:=*#%#%#%%#+::-+-::%%%%-
             %%%%%%%%@%%::::-=#%%%%%%%%%%%%%%%##:::.::@%%%%%%%%%:
            #%%%%%%%%%%%@:::.....+#%%%%%###+:.::: ::+%%%%@%%%@%%%
            %%%%%%%%%%%%%    ....:...:..:.::::..    %%%%@%%%%%%%%=
             %%%%%%%%%%%=     ::...  :.:..  .       %%%%%%%%%%%%%#
              %%%%%%%%%=                            #%%%%%%%%%%%%=
                  +*                                 %%%%%%%%%%%#
                                                      +%%%%%%%%
               
*/