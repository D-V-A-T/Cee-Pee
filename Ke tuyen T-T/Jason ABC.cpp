#include<bits/stdc++.h>
using namespace std; 
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#define ll long long
#define dbl long double
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
#define FILE "ellencute"
 
const ll INF=902337203695775807, N=1e6, MOD=1e9+7;    
 
void ffopen(){
    if(fopen(FILE".inp", "r")){
        freopen(FILE".inp", "r", stdin);
        freopen(FILE".out", "w", stdout);
    }else if(fopen("ellencute.inp", "r")){
        freopen("ellencute.inp", "r", stdin);
        freopen("ellencute.out", "w", stdout);
    }
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
ll __lcm(ll a, ll b, const ll lim=LLONG_MAX){
    if(a == -1 || b == -1)return -1;
    ll g = __gcd(a,b);
    if(b/g > lim/a)return -1;
    return (a/g)*b;
}

int pfsA[N], pfsB[N], pfsC[N], sfsA[N], sfsB[N], sfsC[N];
int mA[N*5], mB[N*5], mC[N*5];

void sol(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    s = " " + s;

    if(count(bend(s), 'A') == n && count(bend(s), 'B') == n){
        cout << 0;
        return;
    }

    for(int i=1;n*3>=i;i++){
        pfsA[i] = pfsA[i-1] + (s[i]=='A');
        pfsB[i] = pfsB[i-1] + (s[i]=='B');
        pfsC[i] = pfsC[i-1] + (s[i]=='C');
    }

    for(int i=n*3;i>=1;i--){
        sfsA[i] = sfsA[i+1] + (s[i]=='A');
        sfsB[i] = sfsB[i+1] + (s[i]=='B');
        sfsC[i] = sfsC[i+1] + (s[i]=='C');
    }

    for(int i=1;3*n>=i;i++){
        int tC = (n - sfsC[i+1] - i - 1) + N;
        int tB = (n - sfsB[i+1] - i - 1) + N;
        int tA = (n - sfsA[i+1] - i - 1) + N;


        int c = mC[tC];
        if(c){
            if(pfsA[c-1] + sfsA[i+1] == n){
                cout << "1\n" << mC[tC] << ' ' << i << " C" << el;
                return;                
            }
        }

        c = mB[tB];
        if(mB[tB]){
            if(pfsA[c-1] + sfsA[i+1] == n){
                cout << "1\n" << mB[tB] << ' ' << i << " B" << el;
                return;                
            }
        }

        c = mA[tA];
        if(mA[tA]){
            if(pfsC[c-1] + sfsC[i+1] == n){
                cout << "1\n" << mA[tA] << ' ' << i << " A" << el;
                return;                
            }
        }

        mC[pfsC[i-1] - i + N] = i;
        mB[pfsB[i-1] - i + N] = i;
        mA[pfsA[i-1] - i + N] = i;
    }

    int cntA = 0, cntB = 0, cntC = 0;
    for(int i=1;3*n>=i;i++){
        cntA += s[i] == 'A';
        cntB += s[i] == 'B';
        cntC += s[i] == 'C';

        if(cntA == n){
            cout << "2\n";
            cout << i+1 << ' ' << 3*n << " B\n";
            cout << 3*n-(n-cntC)+1 << ' ' << 3*n << " C\n";
            return;
        }
        if(cntB == n){
            cout << "2\n";
            cout << i+1 << ' ' << 3*n << " A\n";
            cout << 3*n-(n-cntC)+1 << ' ' << 3*n << " C\n";
            return;
        }
        if(cntC == n){            
            cout << "2\n";
            cout << i+1 << ' ' << 3*n << " B\n";
            cout << 3*n-(n-cntA)+1 << ' ' << 3*n << " A\n";
            return;
        }
    }


}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ffopen();
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*
                                                     ...-%%%%%%%%%%%...                               
                                             .:**#%=%%%%%+........-%%%%. .                            
                                        .%%%%%%=-..%#.               .#%%.                            
                                      %%%+..      .:                    *%%.                          
                                    .%%.          :.                     :%%%%%:.                     
                                   .%%.     ...  .:                    ::     .=%%%.                  
                                 ..%%.    #%#:%. :                   :..          =%%.                
                                %%+..:  .%*::::%-::::::-::::::..   .:-%%%%.        .*%%..             
                              .%#     :.%:::::::%%%%%%%%%%%%%+...%%%+::::%#.         .%%.             
                             .%%.  ..:.%=::::*%#***#%::::::::%%%%=:::::::%%.          .%%.            
                             =%%%...-%%%:::*%********%:::%%%****%::::::::%%            .%-            
                            .%::::%%***%=:%%**********%%********%:::::::=%-:.          .%..           
                            #%:::%#*****%%**********************%:::+%%%*%%-.:      .::..%%.          
                           .%%::%%*****==**==*****#************#%%%%#******%%..::::..     .%%.        
                         .%%#%+%%***************##*+=+*==********************%%.:.         .%%        
                        .%%***%%****************#**==**==******==**+=+********%%%%%%%%%     %%.       
                      .#%#*********************%%**************++************%%::::::%*   .%%%.       
                     .%%***************#*****%%%****************************%%::::::%% .-%%%.         
                    .#%***************#****%%--%*********%*****************%#::::-%%%%%%%%%%.         
                    .%%**************#**%%%----%********%%**************#***#%%%#**%#******%*         
                   .%%**************#%%%--.....%%*******%%**************#**********#%******%%.        
                   .%%*************%%...........%%******%-%*************#***********%%*****%%.        
                   .%%*************%%...%%%%%.....%%%%%%%.=%%%%%%%%##****#****##::::+%%*****%#        
                   .%%************%%...%.   %%.................%%%%-.....%*****#*****%%*****%%        
                   .#%#*#****#****%%:::%-  %%.................%.   #-....%*****#*#####%#****%%.       
                    .%%##****%%%**%%:::::##...................%=  .%+:::%#*****#:####*%%****%%.       
                     .+%%#**%%.#%%%%::::::........###+.:*##-....%%%:::::%*****##******%%****%%-       
                       ..%%*%%.......:::.......##..#*...#+..#*....:::::%******#*****##%%*****%%.      
                        .%%%%%................#-##=--##+-+###-#....:::%******#:###*::%%#*****%%.      
                      .%%****%%..............#----------------=*...#%#****##**##::#**%%*******%%.     
                      .%%%%%*=+%%*...........#-----------------#.....#%%%%%%+:##*##:*%%*******%%%.    
                        ..:*%====%%%%........#-----------------#:.........%#********%%*****%%%%%%.    
                          .%%=======*%%%%%%%.%%+----#-%------%%#.......%%%%::::::::%%==***#%###%%.    
                         ..%%=============+%%-:#%%%%-::%%%%%%::%%%%%%%%%=%%*******%%=====**%%###%%..  
                        -%%%%%%%%%%%%%%%%+%.%+:+%::%::::%::%:::%%#%... .%%******%%%========#%####%%.  
                      .%%++#############%%# ..%%.**%%#%%%%%%%#%***%.  :%%*****%%%=+%%%%%%%%%%#####%%. 
                    .%%++++*############*++%   .%************#****%.  #%*%%%%+++%%%%###############%%.
         .+%%%%%%%%%%####+##########*+++++%%. .%**#**********#****%   %%**%%%++++###################%:
      =%%%%######################++++++++%%*%.-%%#***********#****% .%****%%+++++###################%%
   .%%%#######################*%%%%%%%%.%%*#%+%###################%.%%***%%%+++++###################%%
  *%%######################+#%%++++++%*. =%*%. .:%%%%########%%%%%%%%%#*#%.%%++#####################%%
.%%%#####################%%%%%+++++++%-  %*#%%.          .%%%*++++++*%%%....%%#####################%%*
%%######%%%%%#%%%%%######%%.%*+++++++%.  %****#.        .%%+++*+++++*++%%...=%%###################%%%.
%%%%%%%%#-=##%...%%######%%.%%+++++++%%..*%***#%%%%%. ..%+++++++++++++++%%...%%##################%%%. 
.%:.             .#%#####%%.%%+++++++++%. %*********%%%%%++++++++++++++++%%...%%##############%%%%..  
                  :%#####%% .%%+++++++%%  .%%**********%%++++++++++++++++%%.....%#########%%%%%% .    
                 *%#####%%.  .%%+++++++%%:. .%%********%%++++++++++++++++%%....%%%%%%%%%%%%*..        
                 .%%##%%%     .%%*+++++++%%. ..#%%%#****%%+++++++++++++++%%%%%% . .....               
                 %%#%%%.       .:%%%%%%%%%%%...-%. ......%%+++++++++++++%%.                           
               ..%%%.              ...     .%%%#%%%=:#%%%%%%%%*++++++%%%#                             
                                                 .-%%+.  ... .%%%%%%%:.  
*/