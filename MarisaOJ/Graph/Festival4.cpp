#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define nextl cout << '\n'
#define el '\n'
#include<bits/stdc++.h>
#define dbl long double
#define int long long
using namespace std; 

const int INF=9023372036954775807, N=2e5+69;
int MOD=1e9+7;    

void ffopen(const string& file){
    if(file.empty())return;
    freopen((file + ".inp").c_str(), "r", stdin);
    freopen((file + ".out").c_str(), "w", stdout);
}

int posmod(int a,int b){
    return ((a%b)+b)%b;
}

int __lcm(int a,int b){
    return a*b/__gcd(a,b);
}
/*
There are a total of n
unique places where Marisa can buy sake, 
each with its own price denoted by ci. 
To navigate between these places, Marisa can utilize a special 
transportation system operated by the Kappa. However, there are certain costs 
associated with using each route. The first time Marisa uses route i, 
it incurs a cost of wi. However, due to the systemâ€™s unique rules, 
subsequent uses of the same route costs li (l[i] <= w[i])

Marisa devises a plan to begin her journey from her house at location 1
explore different places to find the perfect sake, 
and ultimately reach the Hakurei Shrine located at location n. 
The goal is to determine the minimum cost for Marisa to accomplish her plan 
and fully enjoy the Hanami.
*/

int a[N],n,m;

struct reimu{
    int u,d,t;
    bool operator < (const reimu& o) const {
        return d > o.d;
    }
};

struct pii{
	int fi,se,w;
    bool operator < (const pii& o) const {
        return w > o.w;
    }
};

class Graph{
    vect<vect<pii>> graph;
    vect<vect<int>> dist, DFN;
    // dist[i][0] : min distance from 1->i and hasn't chosen a path
    //              to n yet
    // dist[i][1] : min distance from 1->i and has chosen a path to n
    // DFN[i][0] : min distance from i->n
    prq<reimu> pq;
public:
    Graph(){graph.rs(n+1);dist.rs(n+1, vect<int>(2, 1e16));}
    void connect(int u, int v, int w, int l){
        graph[u].pb({v,w,l});
        graph[v].pb({u,w,l});
    }void dickcha(int root){
        for(auto& i : dist)fill(bend(i), 1e16);
        pq.push({root, 0, 0});
        dist[root][0]=0;
        if(root==1){
            dist[root][1]=DFN[1][0];
            pq.push({root, DFN[1][0], 1});
        }
        while(pq.size()){
            reimu x=pq.top();
            pq.pop();
            int start=x.u, d=x.d, t=x.t;
            if(d > dist[start][t])continue; 
            for(pii& i : graph[start]){
                int v=i.fi, w=i.se;
                if(dist[v][0] > dist[start][0]+w){
                    dist[v][0]=dist[start][0]+w;
                    pq.push({v, dist[v][0], 0});
                }int r;
                // r is the min distance to get from 1 -> i and return
                // back to somwhere on the way to go to n
                if(root == 1)
                	r = min(dist[start][1]+w+i.w,
                             dist[start][0]+w+DFN[v][0]);
                if(root == 1 && dist[v][1] > r){
                    dist[v][1]=r;
                    pq.push({v, r, 1});
                }
            }
        }
    }void AC(){
        dickcha(n);
        DFN=dist;
        dickcha(1);
        int ans=INF;
        for(int i=1;n>=i;i++){
            ans = min({ans, dist[i][1]+a[i]});
        }cout << ans;
    }
};

void sol(){
    cin >> n >> m;
    for(int i=1;n>=i;i++)cin >> a[i];
    Graph g;
    while(m--){
        int u,v,w,l;
        cin >> u >> v >> w >> l;
        g.connect(u, v, w, l);
    }g.AC();
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
//  freopen("","r",stdin);
//  freopen("","w",stdout);
    int t=1;
    //cin >> t;
    while(t--)
    sol();
}
/*                                                                              .+*
                                                                          ###.####+
                                                                    =####%%#-#####*.
                                                               -##%%%%%%%%#:-#####*:..
  .:.=####:+                                              +*###%%%%%%%%%%#::#%%%###:::
  ...######:####*                                      *#####%%%%%%%%%%%%#:-##%%###:::.
  ...######::#######=                               ###%%############%%%%%%#::####*...
 .:.+#%####+###############*+=                   ##%%%%%%%%%%%%%##########%%#:.####...
 .::###*.-##%%%%%%%%%%%%%%%%%#####*           +#%%%%%%%%%%%%%%%%%%%%#######:.##%###:.:.
 ..-###:####%%%%%%%%%%%%%%%%%%%%%%%%###-     ##%%%%%%%%%%%%%%%%%%%%%%%%#%##::######...
 :.*##.*#######%%%%%%%%%%####%%##########*-*%%#%%%%%%###%%%%%%%%%%%%%%%%%%#%#*.####..:
 ::#####+::############%%%%%%%%%%%%%%%%%%%%##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::*####.::
...##%%#%#:#%%%#####%%%%%%%%%%%-+#%#:--%%%##=+=:-%%%%%#%%%%%%%%%%%%%%%%%%::##%%%##+:::
 ..-##%##:#%%%%%%%%%%%%%%+-=###%%%#######%#####+=+==-::#%%%%%%%%%%%%%%%%%#:+%%%%%#-...
 .:.##%#*:#%%%%%%%%%%*#%%#%%#%###########%#####*###**-=-##%%%%%%%%%%%%%%%%#-#%%%%#-:::
 . .#%%%##----+%%%%%#+#%%#%#%##############*########**##%:-=%%#+%%%%%%%##*=--%%%##:::
  ..-#%%%%%%%-#%%%%#%%%%################*#####**#########*=+#%%%# %%%%%=#%%%%%%%#=:::
   -:#%%%%%%#-#%#+###%#############*###################*#####-=*%#   %%#-%%%%%##*..:.
   -.=#%%%%%#-+%*#%##########################################*=#%%#+    +*%%%#%#::
   ..:#%%%##  -+###############################################@+-%%#       ##*:
    ::-      #+####################################%#####%#####*-*-%%#
            ###################*################%#%#%#############=#%%#-
           ::=##########################%######%%#%##%%#%%%#######*-+#%#=
           -=+##########################%%#########%#%%###%#######%=-#%%#*
          ##*%#*##################################%#%%#%%#########%+-+##%##
         ---+%###############################%####++*%%%%%%%#######=-:=*####
        .:=+#%#*############*+==#########%%#%#%%#==---=*#%%%%%%##### :--#%%##
       :.=*%%%############%%%#%#%%#######%%#%#%%#*###*####%###%#####  ==::#%##
      .:-=#%%%###########*+=--:--=+##%#%##%#%#%#=-----:--=*%##%#%##*   ==:%###*
      :-+#%%%%*########%*+=----:---=%##%%#%%#%%%=---::::--=*########    :-#%###
      -=#%%%%%*#######@@*+---------==%%%%%%%%#%+------:----=*%%#####     ---####
    :::*%%%%%#*######@@@#+------=---==+%%%%%%%%==--=------==*%%%#####   ----####+
   .:-%%%%%%%*######%@@%#+=%:.%######@+==#%%%%#+@-:-%####%+=#%%@@####-   .--:####
   :-###%%%%#%####%@@@@%*+=%#@%######%----==*%=-%@#%#####%=+*%%%@@%##%     ::+###-
      -=*####% +*#@@@@%%*+=@########%=----------+%#######%=+*%%%%#=#%#     :-:###
            #%  ==+%%%%%*+==%#######@------------%#####%%=+=%#**##-%%        :.
             #  %%%###%%++===%#####@=------------=%###%%====%%%%%#:#
                %%%@%%%%=+===--=#*-----:-----------=+==-===-%%%%%*
                *%%%#%%%=====--------------------------==-=%%%**#+
                +%% -+**=-====-----------###-----------==@@@#%#@#-
                #*  #%%#%%*-===----------------------=+@@@@%#%@@%*
                   #%@@%      -=-------------------:  %@+# -#@@%%#
                  #%%@@%#      -=+==---------==++=+++      #%%%%%%=
                 .%%%%%%#--=- ---===----=#-------===++-----%%%%##%#-:::.
            ..::::#%#####-----=-==-:::::::::::::-#+=%=--::-#######-:::.:
            ..:#::#######::::::=--=%%**#:..:-%%%%%%%=--::::######*#:::::
            :::#:::*#####--::::-=--=%%%-....=%%%%%%%#+-::::#####::%:::::
            :::::::::+##+----:::=*-*%%::::..-%%%%%%%%*=::::##+:::-+:::-:
            ..:#:::::::------:-++##%%:.::.:.:%%%%%%%%*--::::::::::::::-:
            ..:#:::::::---:::=+#%%%%+::.:::::+%%%%%%%%*---::::::=#:::--:
             ..#::::-----====+%%%%%%::.......-%%%%%%%%%%+--:::::#-:::-::
             .:::------=--==#%%%%%%%:::....:::%%%%%%%%%%%%+--::=+:::-::
              .:-=-----==+#%%%%%%%%%%%%%#=--=*%%%%%%%%%%%%%%+--::.:---:
             ..:=--#===+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::==--:
             :::##+=+##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:----
            .::+%%%+:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#=##.
            :::#%%%%#:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-#%%%%%#%%#=:
           .::::=##%%%%#--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%++#%#%%%##%%%%%#::
           :.::::.::*##%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%##########+::::
            :  :-::-::.:#%%%%#:#%%%%%%%%%%%%%%%%%%%%-#%%##+......::::::::::
                %%%*:--..:#%%%%%%*##%%%%%%#%%%##::%%%%#-::.....:::.::::::
              %%%%%%%%%-..:=%%%%%%##=+%=:=*#%#%#%%#+::-+-::%%%%-
             %%%%%%%%@%%::::-=#%%%%%%%%%%%%%%%##:::.::@%%%%%%%%%:
            #%%%%%%%%%%%@:::.....+#%%%%%###+:.::: ::+%%%%@%%%@%%%
            %%%%%%%%%%%%%    ....:...:..:.::::..    %%%%@%%%%%%%%=
             %%%%%%%%%%%=     ::...  :.:..  .       %%%%%%%%%%%%%#
              %%%%%%%%%=                            #%%%%%%%%%%%%=
                  +*                                 %%%%%%%%%%%#
                                                      +%%%%%%%%
               
*/