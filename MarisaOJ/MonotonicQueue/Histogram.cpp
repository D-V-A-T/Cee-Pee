#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define nextl cout << '\n'
#define el '\n'
#include<bits/stdc++.h>
#define dbl long double
#define int long long
using namespace std;

const int INF=9223372036854775807;
int MOD=1e9+7;	

int posmod(int a,int b){
	return ((a%b)+b)%b;
}

int __lcm(int a,int b){
	return a*b/__gcd(a,b);
}

int n, k, ans=-INF;

void sol(){
	cin >> n;
	vect<int> v(n);
	for(int& i : v)cin >> i;
	stack<pair<int,int>> st;
	vect<int> maxlenl(n), maxlenr(n);
	for(int i=0;n>i;i++){
		while(st.size() && st.top().fi >= v[i]){
			maxlenl[i]+=maxlenl[st.top().se]+1;
			st.pop();
		}st.push({v[i], i});
	}st=stack<pair<int,int>>();
	for(int i=n-1;i>=0;i--){
		int len=0;
		while(st.size() && st.top().fi >= v[i]){
			maxlenr[i]+=maxlenr[st.top().se]+1;
			st.pop();
		}st.push({v[i], i});
	}for(int i=0;n>i;i++)ans=max(ans, v[i]*(maxlenl[i]+maxlenr[i]+1));
	cout << ans;
}

signed main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
// 	freopen("","r",stdin);
//	freopen("","w",stdout);
	sol();
}
/*
           +++++                                               +++++=
         +++++++++                                           ++******+
        ++***+++++++                                      ++**********+= 
       +*********+++++                                  ++*************++
      +***********+*++++                              +++***************+
     ++***************++++                          =++******************+
     +******************++++                       +++*************###***+
     *++********************++                    =++**********########****
     ++*********************++++                ++++********##########*****
    *+***********#*#*********++++             +++********#############***+
     ++**+*+*******#######***+**++          ++*+******#########****####***
      +**+*+++++++++*****#####***++++=     =+*++*****#####****************
      +************+****++++++******+++++++**++***##**********************
     ************##########*+=----:---------++*************************+
      **##############*+-:----::-::::--:-----------+#%%%%####*********
      +####**#*#****=--------:::::::--:-:--------------+#######*******
      ***##*****+=------------::::::::::-----------------=*#####******+
      **#****+*+-------------------:::---------------------=**####****+
     *+**+****=----------------------------------------------****####**+
      ******#=------------------------------------------------*#*****##*
       ***##--------------------------------------------------=####**+++
      +**##-----------------------------------------------------*##*#**
     +*###*-----------------------------------------------------*##**
    **####*-----------------------------------------------------+###**
   +*#####+-----------------------------------------------------*####*+
  ********+---------------==-------------------=+---------------*#####*+
          =--------------=---------------------==+--------------*######*+
          -------------=-----------------------====-------------     ***
          ------------=---===----------------=++==-=------------
          -----------=-----------------------===----=------------
          ----------*##*=---=+-------------===+*--==+=-----------
         -----------#-:+++**+*#+---------=#####*#****+--------=---
         ----------=+**++++*+*#=---------=*--#*#****#+=-------=---
         ----------==++++**+**#-----------####*******==-----------
        -----------=--*++++*+*------------+####****#-==------=----
        -----=-----==---+*#*=--------------=*#**##=--==------==---
       ----=+++----==-------------------------------===----+++----
          =++++*----==-----------------------------===---=***+++=--
          =+++++*+-**=----------=-----------------===---*****+++=
           =++++++***#*+--------------=---------===-++*****+*+++=
             ==+++==+****-----======-=-==========++==****+=++++
                ==+===---+=----*####***++=====--=++========*+=
               =====-----=*****########*#######*#**==--=======
             =====------=+******####**###**######*+=----========
             =----------=+**#######****#*****#####+---------=====
          -----------=--=**##***##******#*****####+--------------
        ----------===++-**##****#********#****####*=-===-----------
    ------------==+=====***********************####****+==----------
   -----------=+=====++*****************************#####*===--------
   --------=======+++++++++++++++++***+*+**+*+++++++++**####*+=-----
    -----======++++++++++++++++++++++***+*+++++++++++++++*#####*==
      -   ==++*++++++++++++++++++++++*++++++++++++++++++++++******
         +*+**+++++++++++++**++++++++*+++++++++=------=+++++++++=-----
       -+++++==+++=--::::---=++++++++++++++++=-:::::::::--++=-----------
    ----------==-:::::::::-----===+++++++++=-::::::::::::::-+-----------
   ---------::::::::::::::::-------=+++++=-:::::::::::::::::---------:-
   -------:::::----:::::::::::::::--------::::::::------------------:-
   -----:---------------:::::::::::::::::::::::------------ ---------
   --------------------------:::::::::::::::---------------    --=-=--
     ----   --------------=+====---::::--====---------------    ----
            --------------*+++ ---=--====+=-- --------------
            -------------=          -:= =-    -------------
             -----------=                       ----------
               -=======                           ======
*/