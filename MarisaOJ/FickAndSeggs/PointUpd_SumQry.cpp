#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#include<bits/stdc++.h>
#define dbl long double
#define int long long
using namespace std; 

const int INF=9023372036954775807;
int MOD=1e9+7;    

int posmod(int a,int b){
    return ((a%b)+b)%b;
}

int __lcm(int a,int b){
    return a*b/__gcd(a,b);
}

int n, q, a[200005];
 
class SeggsTree{
    vect<int> t;
public:
    vect<int> v;
    SeggsTree(){
        v.rs(n);
        t.rs(4*n+69);
        for(int& i : v)
            cin >> i;
        build(1, 0, n-1);
    }void build(int id, int l, int r){
        if(l == r){
            t[id] = v[l];
            return;
        }int mid=(l+r)/2;
        build(id*2, l, mid);
        build(id*2+1, mid+1, r);
        t[id]=t[id*2] + t[id*2 + 1];
    }int get(int id, int l, int r, int u, int v){
        if(r < u || l > v)return 0;
        if(u <= l && r <= v)return t[id];
        int mid=(l+r)/2;
        int x=get(id*2, l, mid, u, v), y=get(id*2+1, mid+1, r, u, v);
        return x+y;
    }void update(int id, int l, int r, int pos, int add){
        if(l > pos || pos > r)return;
        t[id]+=add;
        if(l == r){
			v[l]+=add;
			return;
		}int mid=(l+r)/2;
        update(id*2, l, mid, pos ,add);
        update(id*2+1, mid+1, r, pos, add);
    }void AC(){
    	cin >> n >> q;
	    SeggsTree sgt;
	    while(q--){
	        int t;
	        cin >> t;
	        if(t == 1){
	            int pos, val;cin >> pos >> val;
	            pos--;
	            int add=val-sgt.v[pos];
	            sgt.update(1, 0, n-1, pos, add);
	        }else{
	            int u,v;cin >> u >> v;
	            u--;v--;
	            cout << sgt.get(1, 0, n-1, u, v) << el;
	        }
	    }
    }
};

class FenwickTree {
public:
    vect<int> bit;
    FenwickTree() {
        bit.rs(n);
        for (int i = 0; i < n; i++) {
            bit[i] += a[i];
            int r = i | (i + 1);
            if (r < n) bit[r] += bit[i];
        }
    }int sum(int r) {
        int ret = 0;
        for (; r >= 0; r = (r & (r + 1)) - 1)
            ret += bit[r];
        return ret;
    }int get(int l, int r) {
        return sum(r) - sum(l - 1);
    }void upd(int x, int add) {
        for (; x < n; x |= (x + 1))
            bit[x] += add;
    }void AC(){
        int q;
        cin >> n >> q;
        for(int i=0;n>i;i++)cin >> a[i];
        FenwickTree ft;
        while(q--){
            int t;cin >> t;
            if(t == 1){
                int x,v;cin >> x >> v;
                x--;
                ft.upd(x, v-a[x]);
                a[x] = v;
            }else{
                int l,r;cin >> l >> r;
                l--;r--;
                cout << ft.get(l, r) << el;
            }
        }
    }
};


void sol(){
    
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
//  freopen("","r",stdin);
//  freopen("","w",stdout);
    int t=1;
    //cin >> t;
    while(t--)
    sol();
}
/*                                                                              .+*
                                                                          ###.####+
                                                                    =####%%#-#####*.
                                                               -##%%%%%%%%#:-#####*:..
  .:.=####:+                                              +*###%%%%%%%%%%#::#%%%###:::
  ...######:####*                                      *#####%%%%%%%%%%%%#:-##%%###:::.
  ...######::#######=                               ###%%############%%%%%%#::####*...
 .:.+#%####+###############*+=                   ##%%%%%%%%%%%%%##########%%#:.####...
 .::###*.-##%%%%%%%%%%%%%%%%%#####*           +#%%%%%%%%%%%%%%%%%%%%#######:.##%###:.:.
 ..-###:####%%%%%%%%%%%%%%%%%%%%%%%%###-     ##%%%%%%%%%%%%%%%%%%%%%%%%#%##::######...
 :.*##.*#######%%%%%%%%%%####%%##########*-*%%#%%%%%%###%%%%%%%%%%%%%%%%%%#%#*.####..:
 ::#####+::############%%%%%%%%%%%%%%%%%%%%##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::*####.::
...##%%#%#:#%%%#####%%%%%%%%%%%-+#%#:--%%%##=+=:-%%%%%#%%%%%%%%%%%%%%%%%%::##%%%##+:::
 ..-##%##:#%%%%%%%%%%%%%%+-=###%%%#######%#####+=+==-::#%%%%%%%%%%%%%%%%%#:+%%%%%#-...
 .:.##%#*:#%%%%%%%%%%*#%%#%%#%###########%#####*###**-=-##%%%%%%%%%%%%%%%%#-#%%%%#-:::
 . .#%%%##----+%%%%%#+#%%#%#%##############*########**##%:-=%%#+%%%%%%%##*=--%%%##:::
  ..-#%%%%%%%-#%%%%#%%%%################*#####**#########*=+#%%%# %%%%%=#%%%%%%%#=:::
   -:#%%%%%%#-#%#+###%#############*###################*#####-=*%#   %%#-%%%%%##*..:.
   -.=#%%%%%#-+%*#%##########################################*=#%%#+    +*%%%#%#::
   ..:#%%%##  -+###############################################@+-%%#       ##*:
    ::-      #+####################################%#####%#####*-*-%%#
            ###################*################%#%#%#############=#%%#-
           ::=##########################%######%%#%##%%#%%%#######*-+#%#=
           -=+##########################%%#########%#%%###%#######%=-#%%#*
          ##*%#*##################################%#%%#%%#########%+-+##%##
         ---+%###############################%####++*%%%%%%%#######=-:=*####
        .:=+#%#*############*+==#########%%#%#%%#==---=*#%%%%%%##### :--#%%##
       :.=*%%%############%%%#%#%%#######%%#%#%%#*###*####%###%#####  ==::#%##
      .:-=#%%%###########*+=--:--=+##%#%##%#%#%#=-----:--=*%##%#%##*   ==:%###*
      :-+#%%%%*########%*+=----:---=%##%%#%%#%%%=---::::--=*########    :-#%###
      -=#%%%%%*#######@@*+---------==%%%%%%%%#%+------:----=*%%#####     ---####
    :::*%%%%%#*######@@@#+------=---==+%%%%%%%%==--=------==*%%%#####   ----####+
   .:-%%%%%%%*######%@@%#+=%:.%######@+==#%%%%#+@-:-%####%+=#%%@@####-   .--:####
   :-###%%%%#%####%@@@@%*+=%#@%######%----==*%=-%@#%#####%=+*%%%@@%##%     ::+###-
      -=*####% +*#@@@@%%*+=@########%=----------+%#######%=+*%%%%#=#%#     :-:###
            #%  ==+%%%%%*+==%#######@------------%#####%%=+=%#**##-%%        :.
             #  %%%###%%++===%#####@=------------=%###%%====%%%%%#:#
                %%%@%%%%=+===--=#*-----:-----------=+==-===-%%%%%*
                *%%%#%%%=====--------------------------==-=%%%**#+
                +%% -+**=-====-----------###-----------==@@@#%#@#-
                #*  #%%#%%*-===----------------------=+@@@@%#%@@%*
                   #%@@%      -=-------------------:  %@+# -#@@%%#
                  #%%@@%#      -=+==---------==++=+++      #%%%%%%=
                 .%%%%%%#--=- ---===----=#-------===++-----%%%%##%#-:::.
            ..::::#%#####-----=-==-:::::::::::::-#+=%=--::-#######-:::.:
            ..:#::#######::::::=--=%%**#:..:-%%%%%%%=--::::######*#:::::
            :::#:::*#####--::::-=--=%%%-....=%%%%%%%#+-::::#####::%:::::
            :::::::::+##+----:::=*-*%%::::..-%%%%%%%%*=::::##+:::-+:::-:
            ..:#:::::::------:-++##%%:.::.:.:%%%%%%%%*--::::::::::::::-:
            ..:#:::::::---:::=+#%%%%+::.:::::+%%%%%%%%*---::::::=#:::--:
             ..#::::-----====+%%%%%%::.......-%%%%%%%%%%+--:::::#-:::-::
             .:::------=--==#%%%%%%%:::....:::%%%%%%%%%%%%+--::=+:::-::
              .:-=-----==+#%%%%%%%%%%%%%#=--=*%%%%%%%%%%%%%%+--::.:---:
             ..:=--#===+#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-::==--:
             :::##+=+##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:----
            .::+%%%+:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#=##.
            :::#%%%%#:%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-#%%%%%#%%#=:
           .::::=##%%%%#--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%++#%#%%%##%%%%%#::
           :.::::.::*##%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%##########+::::
            :  :-::-::.:#%%%%#:#%%%%%%%%%%%%%%%%%%%%-#%%##+......::::::::::
                %%%*:--..:#%%%%%%*##%%%%%%#%%%##::%%%%#-::.....:::.::::::
              %%%%%%%%%-..:=%%%%%%##=+%=:=*#%#%#%%#+::-+-::%%%%-
             %%%%%%%%@%%::::-=#%%%%%%%%%%%%%%%##:::.::@%%%%%%%%%:
            #%%%%%%%%%%%@:::.....+#%%%%%###+:.::: ::+%%%%@%%%@%%%
            %%%%%%%%%%%%%    ....:...:..:.::::..    %%%%@%%%%%%%%=
             %%%%%%%%%%%=     ::...  :.:..  .       %%%%%%%%%%%%%#
              %%%%%%%%%=                            #%%%%%%%%%%%%=
                  +*                                 %%%%%%%%%%%#
                                                      +%%%%%%%%
               
*/