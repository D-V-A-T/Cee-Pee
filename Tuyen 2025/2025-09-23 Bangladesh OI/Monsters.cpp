#include<bits/stdc++.h>
using namespace std; 
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#define ll long long
#define int long long
#define dbl long double
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
#define FILE "ellencute"
 
const ll INF=902337203695775807, N=2e5+69, MOD=1e9+7;    
 
void IO(){
    // if(fopen("in.txt", "r")){
    //     freopen("in.txt", "r", stdin);
    // }else if(fopen(FILE".inp", "r")){
    //     freopen(FILE".inp", "r", stdin);
    //     freopen(FILE".out", "w", stdout);
    // }
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
ll __lcm(ll a, ll b, const ll lim=LLONG_MAX){
    if(a == -1 || b == -1)return -1;
    ll g = __gcd(a,b);
    if(b/g > lim/a)return -1;
    return (a/g)*b;
}

int dp[2025][2025]; // dp[i][j] : x=i, bao ve dc j lang
int X[2025], unzip[N];

void sol(){
    int n, m, k;
    cin >> n >> m;
    int a[n+5], b[m+5];
    vect<int> l(n+5), r(n+5);
    vect<int> zip;
    for(int i=1;n>=i;i++) cin >> a[i], zip.eb(a[i]);
    for(int i=1;m>=i;i++) cin >> b[i], zip.eb(b[i]);
    for(int i=1;n>=i;i++) cin >> l[i];
    for(int i=1;n>=i;i++) cin >> r[i];
    cin >> k;

    memset(dp, -1, sizeof dp);
    sort(bend(zip));
    zip.rs(unique(bend(zip)) - zip.begin());

    for(int i=1;n>=i;i++){
        int p = lwb(bend(zip), a[i]) - zip.begin() + 1;
        unzip[p] = i;
        X[p] = 0;
    }
    for(int i=1;m>=i;i++){
        int p = lwb(bend(zip), b[i]) - zip.begin() + 1;
        X[p] = 1;
    }


    int sz;
    sz = zip.size();

    for(int i=0;2025>i;i++) dp[i][0] = k;

    int mn = 0;

    mn = 0;
    
    vect<int> tl(n+5);
    for(int i=1;n>=i;i++){
        int p = lwb(bend(zip), a[i]) - zip.begin() + 1;
        if(X[p-1]) mn = INF;
        mn = min(mn, l[i]);
        tl[i] = mn;
        mn = min(mn, r[i]);
    }

    mn = 0;
    for(int i=n;i>=1;i--){
        int p = lwb(bend(zip), a[i]) - zip.begin() + 1;
        if(X[p+1]) mn = INF;   
        mn = min(mn, r[i]);
        r[i] = mn;
        mn = min(mn, l[i]);
    }//nextl;
    swap(l, tl);


    for(int i=1;sz>=i;i++){
        for(int j=1;n>=j;j++){

            dp[i][j] = max(dp[i][j], dp[i-1][j]);
            int d = unzip[i];

            

            for(int x=i;x>=1;x--){
                if(X[x]) break;
                int prot = i-x+1, c=unzip[x];
                if(j-prot < 0) break;
                if(dp[x-1][j-prot] >= r[d] + l[c]){
                    dp[i][j] = max(dp[i][j], dp[x-1][j-prot] - (r[d]+l[c]));
                } 
            }
        }
    }

    int p = lwb(bend(zip), a[n]) - zip.begin() + 1;

    for(int i=n;i>=0;i--){
        if(dp[sz][i] > -1){
            cout << i;
            return;
        }
    }cout << "NO";
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    IO();
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*
                                                     ...-%%%%%%%%%%%...                               
                                             .:**#%=%%%%%+........-%%%%. .                            
                                        .%%%%%%=-..%#.               .#%%.                            
                                      %%%+..      .:                    *%%.                          
                                    .%%.          :.                     :%%%%%:.                     
                                   .%%.     ...  .:                    ::     .=%%%.                  
                                 ..%%.    #%#:%. :                   :..          =%%.                
                                %%+..:  .%*::::%-::::::-::::::..   .:-%%%%.        .*%%..             
                              .%#     :.%:::::::%%%%%%%%%%%%%+...%%%+::::%#.         .%%.             
                             .%%.  ..:.%=::::*%#***#%::::::::%%%%=:::::::%%.          .%%.            
                             =%%%...-%%%:::*%********%:::%%%****%::::::::%%            .%-            
                            .%::::%%***%=:%%**********%%********%:::::::=%-:.          .%..           
                            #%:::%#*****%%**********************%:::+%%%*%%-.:      .::..%%.          
                           .%%::%%*****==**==*****#************#%%%%#******%%..::::..     .%%.        
                         .%%#%+%%***************##*+=+*==********************%%.:.         .%%        
                        .%%***%%****************#**==**==******==**+=+********%%%%%%%%%     %%.       
                      .#%#*********************%%**************++************%%::::::%*   .%%%.       
                     .%%***************#*****%%%****************************%%::::::%% .-%%%.         
                    .#%***************#****%%--%*********%*****************%#::::-%%%%%%%%%%.         
                    .%%**************#**%%%----%********%%**************#***#%%%#**%#******%*         
                   .%%**************#%%%--.....%%*******%%**************#**********#%******%%.        
                   .%%*************%%...........%%******%-%*************#***********%%*****%%.        
                   .%%*************%%...%%%%%.....%%%%%%%.=%%%%%%%%##****#****##::::+%%*****%#        
                   .%%************%%...%.   %%.................%%%%-.....%*****#*****%%*****%%        
                   .#%#*#****#****%%:::%-  %%.................%.   #-....%*****#*#####%#****%%.       
                    .%%##****%%%**%%:::::##...................%=  .%+:::%#*****#:####*%%****%%.       
                     .+%%#**%%.#%%%%::::::........###+.:*##-....%%%:::::%*****##******%%****%%-       
                       ..%%*%%.......:::.......##..#*...#+..#*....:::::%******#*****##%%*****%%.      
                        .%%%%%................#-##=--##+-+###-#....:::%******#:###*::%%#*****%%.      
                      .%%****%%..............#----------------=*...#%#****##**##::#**%%*******%%.     
                      .%%%%%*=+%%*...........#-----------------#.....#%%%%%%+:##*##:*%%*******%%%.    
                        ..:*%====%%%%........#-----------------#:.........%#********%%*****%%%%%%.    
                          .%%=======*%%%%%%%.%%+----#-%------%%#.......%%%%::::::::%%==***#%###%%.    
                         ..%%=============+%%-:#%%%%-::%%%%%%::%%%%%%%%%=%%*******%%=====**%%###%%..  
                        -%%%%%%%%%%%%%%%%+%.%+:+%::%::::%::%:::%%#%... .%%******%%%========#%####%%.  
                      .%%++#############%%# ..%%.**%%#%%%%%%%#%***%.  :%%*****%%%=+%%%%%%%%%%#####%%. 
                    .%%++++*############*++%   .%************#****%.  #%*%%%%+++%%%%###############%%.
         .+%%%%%%%%%%####+##########*+++++%%. .%**#**********#****%   %%**%%%++++###################%:
      =%%%%######################++++++++%%*%.-%%#***********#****% .%****%%+++++###################%%
   .%%%#######################*%%%%%%%%.%%*#%+%###################%.%%***%%%+++++###################%%
  *%%######################+#%%++++++%*. =%*%. .:%%%%########%%%%%%%%%#*#%.%%++#####################%%
.%%%#####################%%%%%+++++++%-  %*#%%.          .%%%*++++++*%%%....%%#####################%%*
%%######%%%%%#%%%%%######%%.%*+++++++%.  %****#.        .%%+++*+++++*++%%...=%%###################%%%.
%%%%%%%%#-=##%...%%######%%.%%+++++++%%..*%***#%%%%%. ..%+++++++++++++++%%...%%##################%%%. 
.%:.             .#%#####%%.%%+++++++++%. %*********%%%%%++++++++++++++++%%...%%##############%%%%..  
                  :%#####%% .%%+++++++%%  .%%**********%%++++++++++++++++%%.....%#########%%%%%% .    
                 *%#####%%.  .%%+++++++%%:. .%%********%%++++++++++++++++%%....%%%%%%%%%%%%*..        
                 .%%##%%%     .%%*+++++++%%. ..#%%%#****%%+++++++++++++++%%%%%% . .....               
                 %%#%%%.       .:%%%%%%%%%%%...-%. ......%%+++++++++++++%%.                           
               ..%%%.              ...     .%%%#%%%=:#%%%%%%%%*++++++%%%#                             
                                                 .-%%+.  ... .%%%%%%%:.  
*/