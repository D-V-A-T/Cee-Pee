#include<bits/stdc++.h>
using namespace std; 
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define umap unordered_map
#define prq priority_queue
#define vect vector
#define rs resize
#define bend(v) v.begin(),v.end()
#define pob pop_back
#define pof pop_front
#define lwb lower_bound
#define upb upper_bound
#define pii pair<int,int>
#define nextl cout << '\n'
#define el '\n'
#define deb cout<<"\nok\n";return 
#define ll long long
#define int long long
#define dbl long double
#define popcnt __builtin_popcount
#define ctz __builtin_ctz
#define FILE "ellencute"
 
const ll INF=902337203695775807, N=2e5+69, MOD=1e9+7;    
 
void IO(){
    if(fopen("in.txt", "r")){
        freopen("in.txt", "r", stdin);
    }else if(fopen(FILE".inp", "r")){
        freopen(FILE".inp", "r", stdin);
        freopen(FILE".out", "w", stdout);
    }
}

int pm(int a,const int b=1e9+7){return ((a%b)+b)%b;}
int sq(int x){return x*x;}
ll __lcm(ll a, ll b, const ll lim=LLONG_MAX){
    if(a == -1 || b == -1)return -1;
    ll g = __gcd(a,b);
    if(b/g > lim/a)return -1;
    return (a/g)*b;
}

struct SmolFick{
    vect<int> bit;
    int sz;
    void init(int n){
        sz = n+5;
        bit.rs(sz);
    }
    int get(int x){
        int res = 0;
        for(;x>0;x-=x&-x) res += bit[x];
        return res;
    }void upd(int x, int v){
        for(;x<sz;x+=x&-x) bit[x] += v;
    }
} sf;

struct BigFick{
    vect<int> bit;
    int sz;
    void init(int n){
        sz = n+5;
        bit.rs(sz);
    }int get(int x){
        int res = 0;
        for(;x<sz;x+=x&-x) res += bit[x];
        return res;
    }void upd(int x, int v){
        for(;x>0;x-=x&-x) bit[x] += v;
    }

} bf;

void sol(){
    int n, q;
    cin >> n;
    int a[n];
    vect<int> zip;
    for(int& i : a) cin >> i, zip.eb(i);
    cin >> q;
    vect<vect<int>> que(q);

    

    for(auto& i : que){
        int t;cin >> t;
        i.eb(t);
        if(t==1){
            int x, S;cin >> x >> S;
            x--;
            i.eb(x);i.eb(S);
            zip.eb(S);
        }else{
            int x, y, l, r;
            cin >> x >> y >> l >> r;
            i.eb(x);i.eb(y);i.eb(l);i.eb(r);
            zip.eb(y/l + 1);
            if(x%r) zip.eb(x/r);
            else zip.eb(x/r-1);
        }
    }
    
    sort(bend(zip));
    zip.rs(unique(bend(zip)) - zip.begin());

    bf.init(zip.size()+5);
    sf.init(zip.size()+5);

    for(int& i : a){
        i = lwb(bend(zip), i) - zip.begin() + 1;
        bf.upd(i, 1);
        sf.upd(i, 1);
    }
    
    for(auto& i : que){
        if(i.size() == 3){
            int x = i[1], S = i[2];
            bf.upd(a[x], -1);
            sf.upd(a[x], -1);
            // cout << x << ' ' << S << el;
            a[x] = lwb(bend(zip), S) - zip.begin() + 1;
            bf.upd(a[x], 1);
            sf.upd(a[x], 1);
        }else{ 
            // a[i] * L > Y
            int x=i[1], y=i[2], l=i[3], r=i[4];
            int big = y/l + 1, fumo = 0;
            big = lwb(bend(zip), big) - zip.begin() + 1;

            fumo += bf.get(big);

            int smol;
            if(x%r) smol = (x/r);
            else smol = (x/r-1);

            smol = lwb(bend(zip), smol) - zip.begin() + 1;

            fumo += sf.get(smol);

            cout << n-fumo << el;
        }
    }
}   

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    IO();
    int t=1;
    //cin >> t;
    while(t--)sol();
}
/*
                                                     ...-%%%%%%%%%%%...                               
                                             .:**#%=%%%%%+........-%%%%. .                            
                                        .%%%%%%=-..%#.               .#%%.                            
                                      %%%+..      .:                    *%%.                          
                                    .%%.          :.                     :%%%%%:.                     
                                   .%%.     ...  .:                    ::     .=%%%.                  
                                 ..%%.    #%#:%. :                   :..          =%%.                
                                %%+..:  .%*::::%-::::::-::::::..   .:-%%%%.        .*%%..             
                              .%#     :.%:::::::%%%%%%%%%%%%%+...%%%+::::%#.         .%%.             
                             .%%.  ..:.%=::::*%#***#%::::::::%%%%=:::::::%%.          .%%.            
                             =%%%...-%%%:::*%********%:::%%%****%::::::::%%            .%-            
                            .%::::%%***%=:%%**********%%********%:::::::=%-:.          .%..           
                            #%:::%#*****%%**********************%:::+%%%*%%-.:      .::..%%.          
                           .%%::%%*****==**==*****#************#%%%%#******%%..::::..     .%%.        
                         .%%#%+%%***************##*+=+*==********************%%.:.         .%%        
                        .%%***%%****************#**==**==******==**+=+********%%%%%%%%%     %%.       
                      .#%#*********************%%**************++************%%::::::%*   .%%%.       
                     .%%***************#*****%%%****************************%%::::::%% .-%%%.         
                    .#%***************#****%%--%*********%*****************%#::::-%%%%%%%%%%.         
                    .%%**************#**%%%----%********%%**************#***#%%%#**%#******%*         
                   .%%**************#%%%--.....%%*******%%**************#**********#%******%%.        
                   .%%*************%%...........%%******%-%*************#***********%%*****%%.        
                   .%%*************%%...%%%%%.....%%%%%%%.=%%%%%%%%##****#****##::::+%%*****%#        
                   .%%************%%...%.   %%.................%%%%-.....%*****#*****%%*****%%        
                   .#%#*#****#****%%:::%-  %%.................%.   #-....%*****#*#####%#****%%.       
                    .%%##****%%%**%%:::::##...................%=  .%+:::%#*****#:####*%%****%%.       
                     .+%%#**%%.#%%%%::::::........###+.:*##-....%%%:::::%*****##******%%****%%-       
                       ..%%*%%.......:::.......##..#*...#+..#*....:::::%******#*****##%%*****%%.      
                        .%%%%%................#-##=--##+-+###-#....:::%******#:###*::%%#*****%%.      
                      .%%****%%..............#----------------=*...#%#****##**##::#**%%*******%%.     
                      .%%%%%*=+%%*...........#-----------------#.....#%%%%%%+:##*##:*%%*******%%%.    
                        ..:*%====%%%%........#-----------------#:.........%#********%%*****%%%%%%.    
                          .%%=======*%%%%%%%.%%+----#-%------%%#.......%%%%::::::::%%==***#%###%%.    
                         ..%%=============+%%-:#%%%%-::%%%%%%::%%%%%%%%%=%%*******%%=====**%%###%%..  
                        -%%%%%%%%%%%%%%%%+%.%+:+%::%::::%::%:::%%#%... .%%******%%%========#%####%%.  
                      .%%++#############%%# ..%%.**%%#%%%%%%%#%***%.  :%%*****%%%=+%%%%%%%%%%#####%%. 
                    .%%++++*############*++%   .%************#****%.  #%*%%%%+++%%%%###############%%.
         .+%%%%%%%%%%####+##########*+++++%%. .%**#**********#****%   %%**%%%++++###################%:
      =%%%%######################++++++++%%*%.-%%#***********#****% .%****%%+++++###################%%
   .%%%#######################*%%%%%%%%.%%*#%+%###################%.%%***%%%+++++###################%%
  *%%######################+#%%++++++%*. =%*%. .:%%%%########%%%%%%%%%#*#%.%%++#####################%%
.%%%#####################%%%%%+++++++%-  %*#%%.          .%%%*++++++*%%%....%%#####################%%*
%%######%%%%%#%%%%%######%%.%*+++++++%.  %****#.        .%%+++*+++++*++%%...=%%###################%%%.
%%%%%%%%#-=##%...%%######%%.%%+++++++%%..*%***#%%%%%. ..%+++++++++++++++%%...%%##################%%%. 
.%:.             .#%#####%%.%%+++++++++%. %*********%%%%%++++++++++++++++%%...%%##############%%%%..  
                  :%#####%% .%%+++++++%%  .%%**********%%++++++++++++++++%%.....%#########%%%%%% .    
                 *%#####%%.  .%%+++++++%%:. .%%********%%++++++++++++++++%%....%%%%%%%%%%%%*..        
                 .%%##%%%     .%%*+++++++%%. ..#%%%#****%%+++++++++++++++%%%%%% . .....               
                 %%#%%%.       .:%%%%%%%%%%%...-%. ......%%+++++++++++++%%.                           
               ..%%%.              ...     .%%%#%%%=:#%%%%%%%%*++++++%%%#                             
                                                 .-%%+.  ... .%%%%%%%:.  
*/